/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.mysql.tables;


import com.nda.jooq.generated.mysql.Indexes;
import com.nda.jooq.generated.mysql.Keys;
import com.nda.jooq.generated.mysql.Mysql;
import com.nda.jooq.generated.mysql.tables.records.ReplicationGroupConfigurationVersionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * The group configuration version.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationGroupConfigurationVersion extends TableImpl<ReplicationGroupConfigurationVersionRecord> {

    private static final long serialVersionUID = -842564858;

    /**
     * The reference instance of <code>mysql.replication_group_configuration_version</code>
     */
    public static final ReplicationGroupConfigurationVersion REPLICATION_GROUP_CONFIGURATION_VERSION = new ReplicationGroupConfigurationVersion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReplicationGroupConfigurationVersionRecord> getRecordType() {
        return ReplicationGroupConfigurationVersionRecord.class;
    }

    /**
     * The column <code>mysql.replication_group_configuration_version.name</code>. The configuration name.
     */
    public final TableField<ReplicationGroupConfigurationVersionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CHAR(255).nullable(false), this, "The configuration name.");

    /**
     * The column <code>mysql.replication_group_configuration_version.version</code>. The version of the configuration name.
     */
    public final TableField<ReplicationGroupConfigurationVersionRecord, ULong> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "The version of the configuration name.");

    /**
     * Create a <code>mysql.replication_group_configuration_version</code> table reference
     */
    public ReplicationGroupConfigurationVersion() {
        this(DSL.name("replication_group_configuration_version"), null);
    }

    /**
     * Create an aliased <code>mysql.replication_group_configuration_version</code> table reference
     */
    public ReplicationGroupConfigurationVersion(String alias) {
        this(DSL.name(alias), REPLICATION_GROUP_CONFIGURATION_VERSION);
    }

    /**
     * Create an aliased <code>mysql.replication_group_configuration_version</code> table reference
     */
    public ReplicationGroupConfigurationVersion(Name alias) {
        this(alias, REPLICATION_GROUP_CONFIGURATION_VERSION);
    }

    private ReplicationGroupConfigurationVersion(Name alias, Table<ReplicationGroupConfigurationVersionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReplicationGroupConfigurationVersion(Name alias, Table<ReplicationGroupConfigurationVersionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "The group configuration version.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REPLICATION_GROUP_CONFIGURATION_VERSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReplicationGroupConfigurationVersionRecord> getPrimaryKey() {
        return Keys.KEY_REPLICATION_GROUP_CONFIGURATION_VERSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReplicationGroupConfigurationVersionRecord>> getKeys() {
        return Arrays.<UniqueKey<ReplicationGroupConfigurationVersionRecord>>asList(Keys.KEY_REPLICATION_GROUP_CONFIGURATION_VERSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupConfigurationVersion as(String alias) {
        return new ReplicationGroupConfigurationVersion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupConfigurationVersion as(Name alias) {
        return new ReplicationGroupConfigurationVersion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationGroupConfigurationVersion rename(String name) {
        return new ReplicationGroupConfigurationVersion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationGroupConfigurationVersion rename(Name name) {
        return new ReplicationGroupConfigurationVersion(name, null);
    }
}
