/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables.records;


import com.nda.jooq.generated.performance_schema.enums.ReplicationConnectionStatusServiceState;
import com.nda.jooq.generated.performance_schema.tables.ReplicationConnectionStatus;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationConnectionStatusRecord extends UpdatableRecordImpl<ReplicationConnectionStatusRecord> implements Record20<String, String, String, ULong, ReplicationConnectionStatusServiceState, ULong, Timestamp, String, Integer, String, Timestamp, String, Timestamp, Timestamp, Timestamp, Timestamp, String, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1176679543;

    /**
     * Setter for <code>performance_schema.replication_connection_status.CHANNEL_NAME</code>.
     */
    public void setChannelName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.CHANNEL_NAME</code>.
     */
    public String getChannelName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.GROUP_NAME</code>.
     */
    public void setGroupName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.GROUP_NAME</code>.
     */
    public String getGroupName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.SOURCE_UUID</code>.
     */
    public void setSourceUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.SOURCE_UUID</code>.
     */
    public String getSourceUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.THREAD_ID</code>.
     */
    public void setThreadId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.THREAD_ID</code>.
     */
    public ULong getThreadId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.SERVICE_STATE</code>.
     */
    public void setServiceState(ReplicationConnectionStatusServiceState value) {
        set(4, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.SERVICE_STATE</code>.
     */
    public ReplicationConnectionStatusServiceState getServiceState() {
        return (ReplicationConnectionStatusServiceState) get(4);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.COUNT_RECEIVED_HEARTBEATS</code>.
     */
    public void setCountReceivedHeartbeats(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.COUNT_RECEIVED_HEARTBEATS</code>.
     */
    public ULong getCountReceivedHeartbeats() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_HEARTBEAT_TIMESTAMP</code>. Shows when the most recent heartbeat signal was received.
     */
    public void setLastHeartbeatTimestamp(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_HEARTBEAT_TIMESTAMP</code>. Shows when the most recent heartbeat signal was received.
     */
    public Timestamp getLastHeartbeatTimestamp() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.RECEIVED_TRANSACTION_SET</code>.
     */
    public void setReceivedTransactionSet(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.RECEIVED_TRANSACTION_SET</code>.
     */
    public String getReceivedTransactionSet() {
        return (String) get(7);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_ERROR_NUMBER</code>.
     */
    public void setLastErrorNumber(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_ERROR_NUMBER</code>.
     */
    public Integer getLastErrorNumber() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_ERROR_MESSAGE</code>.
     */
    public void setLastErrorMessage(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_ERROR_MESSAGE</code>.
     */
    public String getLastErrorMessage() {
        return (String) get(9);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_ERROR_TIMESTAMP</code>.
     */
    public void setLastErrorTimestamp(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_ERROR_TIMESTAMP</code>.
     */
    public Timestamp getLastErrorTimestamp() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION</code>.
     */
    public void setLastQueuedTransaction(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION</code>.
     */
    public String getLastQueuedTransaction() {
        return (String) get(11);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public void setLastQueuedTransactionOriginalCommitTimestamp(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getLastQueuedTransactionOriginalCommitTimestamp() {
        return (Timestamp) get(12);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public void setLastQueuedTransactionImmediateCommitTimestamp(Timestamp value) {
        set(13, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getLastQueuedTransactionImmediateCommitTimestamp() {
        return (Timestamp) get(13);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_START_QUEUE_TIMESTAMP</code>.
     */
    public void setLastQueuedTransactionStartQueueTimestamp(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_START_QUEUE_TIMESTAMP</code>.
     */
    public Timestamp getLastQueuedTransactionStartQueueTimestamp() {
        return (Timestamp) get(14);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_END_QUEUE_TIMESTAMP</code>.
     */
    public void setLastQueuedTransactionEndQueueTimestamp(Timestamp value) {
        set(15, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.LAST_QUEUED_TRANSACTION_END_QUEUE_TIMESTAMP</code>.
     */
    public Timestamp getLastQueuedTransactionEndQueueTimestamp() {
        return (Timestamp) get(15);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION</code>.
     */
    public void setQueueingTransaction(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION</code>.
     */
    public String getQueueingTransaction() {
        return (String) get(16);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public void setQueueingTransactionOriginalCommitTimestamp(Timestamp value) {
        set(17, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getQueueingTransactionOriginalCommitTimestamp() {
        return (Timestamp) get(17);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public void setQueueingTransactionImmediateCommitTimestamp(Timestamp value) {
        set(18, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getQueueingTransactionImmediateCommitTimestamp() {
        return (Timestamp) get(18);
    }

    /**
     * Setter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION_START_QUEUE_TIMESTAMP</code>.
     */
    public void setQueueingTransactionStartQueueTimestamp(Timestamp value) {
        set(19, value);
    }

    /**
     * Getter for <code>performance_schema.replication_connection_status.QUEUEING_TRANSACTION_START_QUEUE_TIMESTAMP</code>.
     */
    public Timestamp getQueueingTransactionStartQueueTimestamp() {
        return (Timestamp) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, String, ULong, ReplicationConnectionStatusServiceState, ULong, Timestamp, String, Integer, String, Timestamp, String, Timestamp, Timestamp, Timestamp, Timestamp, String, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row20<String, String, String, ULong, ReplicationConnectionStatusServiceState, ULong, Timestamp, String, Integer, String, Timestamp, String, Timestamp, Timestamp, Timestamp, Timestamp, String, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row20) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.CHANNEL_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.GROUP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.SOURCE_UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field4() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.THREAD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ReplicationConnectionStatusServiceState> field5() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.SERVICE_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field6() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.COUNT_RECEIVED_HEARTBEATS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_HEARTBEAT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.RECEIVED_TRANSACTION_SET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_ERROR_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_ERROR_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_ERROR_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_QUEUED_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field14() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_QUEUED_TRANSACTION_START_QUEUE_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field16() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.LAST_QUEUED_TRANSACTION_END_QUEUE_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.QUEUEING_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field18() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.QUEUEING_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field19() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.QUEUEING_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field20() {
        return ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS.QUEUEING_TRANSACTION_START_QUEUE_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getChannelName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSourceUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component4() {
        return getThreadId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusServiceState component5() {
        return getServiceState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component6() {
        return getCountReceivedHeartbeats();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getLastHeartbeatTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getReceivedTransactionSet();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getLastErrorNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getLastErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getLastErrorTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getLastQueuedTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component13() {
        return getLastQueuedTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component14() {
        return getLastQueuedTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getLastQueuedTransactionStartQueueTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component16() {
        return getLastQueuedTransactionEndQueueTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getQueueingTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component18() {
        return getQueueingTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component19() {
        return getQueueingTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component20() {
        return getQueueingTransactionStartQueueTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getChannelName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getGroupName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSourceUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value4() {
        return getThreadId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusServiceState value5() {
        return getServiceState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value6() {
        return getCountReceivedHeartbeats();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getLastHeartbeatTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getReceivedTransactionSet();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getLastErrorNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getLastErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getLastErrorTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getLastQueuedTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getLastQueuedTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value14() {
        return getLastQueuedTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getLastQueuedTransactionStartQueueTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value16() {
        return getLastQueuedTransactionEndQueueTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getQueueingTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value18() {
        return getQueueingTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value19() {
        return getQueueingTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value20() {
        return getQueueingTransactionStartQueueTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value1(String value) {
        setChannelName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value2(String value) {
        setGroupName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value3(String value) {
        setSourceUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value4(ULong value) {
        setThreadId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value5(ReplicationConnectionStatusServiceState value) {
        setServiceState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value6(ULong value) {
        setCountReceivedHeartbeats(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value7(Timestamp value) {
        setLastHeartbeatTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value8(String value) {
        setReceivedTransactionSet(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value9(Integer value) {
        setLastErrorNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value10(String value) {
        setLastErrorMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value11(Timestamp value) {
        setLastErrorTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value12(String value) {
        setLastQueuedTransaction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value13(Timestamp value) {
        setLastQueuedTransactionOriginalCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value14(Timestamp value) {
        setLastQueuedTransactionImmediateCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value15(Timestamp value) {
        setLastQueuedTransactionStartQueueTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value16(Timestamp value) {
        setLastQueuedTransactionEndQueueTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value17(String value) {
        setQueueingTransaction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value18(Timestamp value) {
        setQueueingTransactionOriginalCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value19(Timestamp value) {
        setQueueingTransactionImmediateCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord value20(Timestamp value) {
        setQueueingTransactionStartQueueTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationConnectionStatusRecord values(String value1, String value2, String value3, ULong value4, ReplicationConnectionStatusServiceState value5, ULong value6, Timestamp value7, String value8, Integer value9, String value10, Timestamp value11, String value12, Timestamp value13, Timestamp value14, Timestamp value15, Timestamp value16, String value17, Timestamp value18, Timestamp value19, Timestamp value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplicationConnectionStatusRecord
     */
    public ReplicationConnectionStatusRecord() {
        super(ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS);
    }

    /**
     * Create a detached, initialised ReplicationConnectionStatusRecord
     */
    public ReplicationConnectionStatusRecord(String channelName, String groupName, String sourceUuid, ULong threadId, ReplicationConnectionStatusServiceState serviceState, ULong countReceivedHeartbeats, Timestamp lastHeartbeatTimestamp, String receivedTransactionSet, Integer lastErrorNumber, String lastErrorMessage, Timestamp lastErrorTimestamp, String lastQueuedTransaction, Timestamp lastQueuedTransactionOriginalCommitTimestamp, Timestamp lastQueuedTransactionImmediateCommitTimestamp, Timestamp lastQueuedTransactionStartQueueTimestamp, Timestamp lastQueuedTransactionEndQueueTimestamp, String queueingTransaction, Timestamp queueingTransactionOriginalCommitTimestamp, Timestamp queueingTransactionImmediateCommitTimestamp, Timestamp queueingTransactionStartQueueTimestamp) {
        super(ReplicationConnectionStatus.REPLICATION_CONNECTION_STATUS);

        set(0, channelName);
        set(1, groupName);
        set(2, sourceUuid);
        set(3, threadId);
        set(4, serviceState);
        set(5, countReceivedHeartbeats);
        set(6, lastHeartbeatTimestamp);
        set(7, receivedTransactionSet);
        set(8, lastErrorNumber);
        set(9, lastErrorMessage);
        set(10, lastErrorTimestamp);
        set(11, lastQueuedTransaction);
        set(12, lastQueuedTransactionOriginalCommitTimestamp);
        set(13, lastQueuedTransactionImmediateCommitTimestamp);
        set(14, lastQueuedTransactionStartQueueTimestamp);
        set(15, lastQueuedTransactionEndQueueTimestamp);
        set(16, queueingTransaction);
        set(17, queueingTransactionOriginalCommitTimestamp);
        set(18, queueingTransactionImmediateCommitTimestamp);
        set(19, queueingTransactionStartQueueTimestamp);
    }
}
