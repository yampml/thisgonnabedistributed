/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.information_schema.tables.records;


import com.nda.jooq.generated.information_schema.tables.InnodbDatafiles;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbDatafilesRecord extends TableRecordImpl<InnodbDatafilesRecord> implements Record2<byte[], String> {

    private static final long serialVersionUID = 605194874;

    /**
     * Setter for <code>information_schema.INNODB_DATAFILES.SPACE</code>.
     */
    public void setSpace(byte... value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_DATAFILES.SPACE</code>.
     */
    public byte[] getSpace() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>information_schema.INNODB_DATAFILES.PATH</code>.
     */
    public void setPath(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_DATAFILES.PATH</code>.
     */
    public String getPath() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<byte[], String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<byte[], String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field1() {
        return InnodbDatafiles.INNODB_DATAFILES.SPACE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return InnodbDatafiles.INNODB_DATAFILES.PATH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component1() {
        return getSpace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value1() {
        return getSpace();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPath();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbDatafilesRecord value1(byte... value) {
        setSpace(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbDatafilesRecord value2(String value) {
        setPath(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbDatafilesRecord values(byte[] value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbDatafilesRecord
     */
    public InnodbDatafilesRecord() {
        super(InnodbDatafiles.INNODB_DATAFILES);
    }

    /**
     * Create a detached, initialised InnodbDatafilesRecord
     */
    public InnodbDatafilesRecord(byte[] space, String path) {
        super(InnodbDatafiles.INNODB_DATAFILES);

        set(0, space);
        set(1, path);
    }
}
