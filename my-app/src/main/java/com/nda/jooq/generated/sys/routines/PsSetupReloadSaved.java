/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.routines;


import com.nda.jooq.generated.sys.Sys;

import javax.annotation.Generated;

import org.jooq.impl.AbstractRoutine;


/**
 * 
 * Description
 * -----------
 * 
 * Reloads a saved Performance Schema configuration,
 * so that you can alter the setup for debugging purposes, 
 * but restore it to a previous state.
 * 
 * Use the companion procedure - ps_setup_save(), to 
 * save a configuration.
 * 
 * Requires the SUPER privilege for "SET sql_log_bin = 0;".
 * 
 * Parameters
 * -----------
 * 
 * None.
 * 
 * Example
 * -----------
 * 
 * mysql&gt; CALL sys.ps_setup_save();
 * Query OK, 0 rows affected (0.08 sec)
 * 
 * mysql&gt; UPDATE performance_schema.setup_instruments SET enabled = 'YES', 
 * timed = 'YES';
 * Query OK, 547 rows affected (0.40 sec)
 * Rows matched: 784  Changed: 547  Warnings: 0
 * 
 * / * Run some tests that need more detailed instrumentation here * /
 * 
 * mysql&gt; CALL sys.ps_setup_reload_saved();
 * Query OK, 0 rows affected (0.32 sec)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsSetupReloadSaved extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = -1174122067;

    /**
     * Create a new routine call instance
     */
    public PsSetupReloadSaved() {
        super("ps_setup_reload_saved", Sys.SYS);
    }
}
