/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.tables.records;


import com.nda.jooq.generated.sys.tables.SchemaObjectOverview;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaObjectOverviewRecord extends TableRecordImpl<SchemaObjectOverviewRecord> implements Record3<String, String, Long> {

    private static final long serialVersionUID = 1540193039;

    /**
     * Setter for <code>sys.schema_object_overview.db</code>.
     */
    public void setDb(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sys.schema_object_overview.db</code>.
     */
    public String getDb() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sys.schema_object_overview.object_type</code>.
     */
    public void setObjectType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sys.schema_object_overview.object_type</code>.
     */
    public String getObjectType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sys.schema_object_overview.count</code>.
     */
    public void setCount(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>sys.schema_object_overview.count</code>.
     */
    public Long getCount() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SchemaObjectOverview.SCHEMA_OBJECT_OVERVIEW.DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SchemaObjectOverview.SCHEMA_OBJECT_OVERVIEW.OBJECT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return SchemaObjectOverview.SCHEMA_OBJECT_OVERVIEW.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getDb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getObjectType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getDb();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getObjectType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaObjectOverviewRecord value1(String value) {
        setDb(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaObjectOverviewRecord value2(String value) {
        setObjectType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaObjectOverviewRecord value3(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaObjectOverviewRecord values(String value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaObjectOverviewRecord
     */
    public SchemaObjectOverviewRecord() {
        super(SchemaObjectOverview.SCHEMA_OBJECT_OVERVIEW);
    }

    /**
     * Create a detached, initialised SchemaObjectOverviewRecord
     */
    public SchemaObjectOverviewRecord(String db, String objectType, Long count) {
        super(SchemaObjectOverview.SCHEMA_OBJECT_OVERVIEW);

        set(0, db);
        set(1, objectType);
        set(2, count);
    }
}
