/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.mysql.tables;


import com.nda.jooq.generated.mysql.Indexes;
import com.nda.jooq.generated.mysql.Keys;
import com.nda.jooq.generated.mysql.Mysql;
import com.nda.jooq.generated.mysql.enums.GlobalGrantsWithGrantOption;
import com.nda.jooq.generated.mysql.tables.records.GlobalGrantsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Extended global grants
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GlobalGrants extends TableImpl<GlobalGrantsRecord> {

    private static final long serialVersionUID = -1224652333;

    /**
     * The reference instance of <code>mysql.global_grants</code>
     */
    public static final GlobalGrants GLOBAL_GRANTS = new GlobalGrants();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GlobalGrantsRecord> getRecordType() {
        return GlobalGrantsRecord.class;
    }

    /**
     * The column <code>mysql.global_grants.USER</code>.
     */
    public final TableField<GlobalGrantsRecord, String> USER = createField("USER", org.jooq.impl.SQLDataType.CHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.global_grants.HOST</code>.
     */
    public final TableField<GlobalGrantsRecord, String> HOST = createField("HOST", org.jooq.impl.SQLDataType.CHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.global_grants.PRIV</code>.
     */
    public final TableField<GlobalGrantsRecord, String> PRIV = createField("PRIV", org.jooq.impl.SQLDataType.CHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.global_grants.WITH_GRANT_OPTION</code>.
     */
    public final TableField<GlobalGrantsRecord, GlobalGrantsWithGrantOption> WITH_GRANT_OPTION = createField("WITH_GRANT_OPTION", org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("N", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.nda.jooq.generated.mysql.enums.GlobalGrantsWithGrantOption.class), this, "");

    /**
     * Create a <code>mysql.global_grants</code> table reference
     */
    public GlobalGrants() {
        this(DSL.name("global_grants"), null);
    }

    /**
     * Create an aliased <code>mysql.global_grants</code> table reference
     */
    public GlobalGrants(String alias) {
        this(DSL.name(alias), GLOBAL_GRANTS);
    }

    /**
     * Create an aliased <code>mysql.global_grants</code> table reference
     */
    public GlobalGrants(Name alias) {
        this(alias, GLOBAL_GRANTS);
    }

    private GlobalGrants(Name alias, Table<GlobalGrantsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GlobalGrants(Name alias, Table<GlobalGrantsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Extended global grants");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GLOBAL_GRANTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GlobalGrantsRecord> getPrimaryKey() {
        return Keys.KEY_GLOBAL_GRANTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GlobalGrantsRecord>> getKeys() {
        return Arrays.<UniqueKey<GlobalGrantsRecord>>asList(Keys.KEY_GLOBAL_GRANTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GlobalGrants as(String alias) {
        return new GlobalGrants(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GlobalGrants as(Name alias) {
        return new GlobalGrants(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GlobalGrants rename(String name) {
        return new GlobalGrants(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GlobalGrants rename(Name name) {
        return new GlobalGrants(name, null);
    }
}
