/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.routines;


import com.nda.jooq.generated.sys.Sys;

import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;


/**
 * 
 * Description
 * -----------
 * 
 * Saves the current configuration of Performance Schema, 
 * so that you can alter the setup for debugging purposes, 
 * but restore it to a previous state.
 * 
 * Use the companion procedure - ps_setup_reload_saved(), to 
 * restore the saved config.
 * 
 * The named lock "sys.ps_setup_save" is taken before the
 * current configuration is saved. If the attempt to get the named
 * lock times out, an error occurs.
 * 
 * The lock is released after the settings have been restored by
 * calling ps_setup_reload_saved().
 * 
 * Requires the SUPER privilege for "SET sql_log_bin = 0;".
 * 
 * Parameters
 * -----------
 * 
 * in_timeout INT
 *   The timeout in seconds used when trying to obtain the lock.
 *   A negative timeout means infinite timeout.
 * 
 * Example
 * -----------
 * 
 * mysql&gt; CALL sys.ps_setup_save(-1);
 * Query OK, 0 rows affected (0.08 sec)
 * 
 * mysql&gt; UPDATE performance_schema.setup_instruments 
 *     -&gt;    SET enabled = 'YES', timed = 'YES';
 * Query OK, 547 rows affected (0.40 sec)
 * Rows matched: 784  Changed: 547  Warnings: 0
 * 
 * / * Run some tests that need more detailed instrumentation here * /
 * 
 * mysql&gt; CALL sys.ps_setup_reload_saved();
 * Query OK, 0 rows affected (0.32 sec)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsSetupSave extends AbstractRoutine<java.lang.Void> {

    private static final long serialVersionUID = 134470703;

    /**
     * The parameter <code>sys.ps_setup_save.in_timeout</code>.
     */
    public static final Parameter<Integer> IN_TIMEOUT = createParameter("in_timeout", org.jooq.impl.SQLDataType.INTEGER, false, false);

    /**
     * Create a new routine call instance
     */
    public PsSetupSave() {
        super("ps_setup_save", Sys.SYS);

        addInParameter(IN_TIMEOUT);
    }

    /**
     * Set the <code>in_timeout</code> parameter IN value to the routine
     */
    public void setInTimeout(Integer value) {
        setValue(IN_TIMEOUT, value);
    }
}
