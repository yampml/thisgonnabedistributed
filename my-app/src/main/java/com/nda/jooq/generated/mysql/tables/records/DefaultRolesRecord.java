/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.mysql.tables.records;


import com.nda.jooq.generated.mysql.tables.DefaultRoles;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Default roles
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultRolesRecord extends UpdatableRecordImpl<DefaultRolesRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = 1479708089;

    /**
     * Setter for <code>mysql.default_roles.HOST</code>.
     */
    public void setHost(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mysql.default_roles.HOST</code>.
     */
    public String getHost() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.default_roles.USER</code>.
     */
    public void setUser(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mysql.default_roles.USER</code>.
     */
    public String getUser() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.default_roles.DEFAULT_ROLE_HOST</code>.
     */
    public void setDefaultRoleHost(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mysql.default_roles.DEFAULT_ROLE_HOST</code>.
     */
    public String getDefaultRoleHost() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.default_roles.DEFAULT_ROLE_USER</code>.
     */
    public void setDefaultRoleUser(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mysql.default_roles.DEFAULT_ROLE_USER</code>.
     */
    public String getDefaultRoleUser() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return DefaultRoles.DEFAULT_ROLES.HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DefaultRoles.DEFAULT_ROLES.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DefaultRoles.DEFAULT_ROLES.DEFAULT_ROLE_HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DefaultRoles.DEFAULT_ROLES.DEFAULT_ROLE_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDefaultRoleHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDefaultRoleUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDefaultRoleHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDefaultRoleUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefaultRolesRecord value1(String value) {
        setHost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefaultRolesRecord value2(String value) {
        setUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefaultRolesRecord value3(String value) {
        setDefaultRoleHost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefaultRolesRecord value4(String value) {
        setDefaultRoleUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefaultRolesRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DefaultRolesRecord
     */
    public DefaultRolesRecord() {
        super(DefaultRoles.DEFAULT_ROLES);
    }

    /**
     * Create a detached, initialised DefaultRolesRecord
     */
    public DefaultRolesRecord(String host, String user, String defaultRoleHost, String defaultRoleUser) {
        super(DefaultRoles.DEFAULT_ROLES);

        set(0, host);
        set(1, user);
        set(2, defaultRoleHost);
        set(3, defaultRoleUser);
    }
}
