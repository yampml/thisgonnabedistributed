/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables.records;


import com.nda.jooq.generated.performance_schema.enums.ReplicationApplierStatusByCoordinatorServiceState;
import com.nda.jooq.generated.performance_schema.tables.ReplicationApplierStatusByCoordinator;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationApplierStatusByCoordinatorRecord extends UpdatableRecordImpl<ReplicationApplierStatusByCoordinatorRecord> implements Record15<String, ULong, ReplicationApplierStatusByCoordinatorServiceState, Integer, String, Timestamp, String, Timestamp, Timestamp, Timestamp, Timestamp, String, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = 699927819;

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.CHANNEL_NAME</code>.
     */
    public void setChannelName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.CHANNEL_NAME</code>.
     */
    public String getChannelName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.THREAD_ID</code>.
     */
    public void setThreadId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.THREAD_ID</code>.
     */
    public ULong getThreadId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.SERVICE_STATE</code>.
     */
    public void setServiceState(ReplicationApplierStatusByCoordinatorServiceState value) {
        set(2, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.SERVICE_STATE</code>.
     */
    public ReplicationApplierStatusByCoordinatorServiceState getServiceState() {
        return (ReplicationApplierStatusByCoordinatorServiceState) get(2);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_ERROR_NUMBER</code>.
     */
    public void setLastErrorNumber(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_ERROR_NUMBER</code>.
     */
    public Integer getLastErrorNumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_ERROR_MESSAGE</code>.
     */
    public void setLastErrorMessage(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_ERROR_MESSAGE</code>.
     */
    public String getLastErrorMessage() {
        return (String) get(4);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_ERROR_TIMESTAMP</code>.
     */
    public void setLastErrorTimestamp(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_ERROR_TIMESTAMP</code>.
     */
    public Timestamp getLastErrorTimestamp() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION</code>.
     */
    public void setLastProcessedTransaction(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION</code>.
     */
    public String getLastProcessedTransaction() {
        return (String) get(6);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public void setLastProcessedTransactionOriginalCommitTimestamp(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getLastProcessedTransactionOriginalCommitTimestamp() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public void setLastProcessedTransactionImmediateCommitTimestamp(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getLastProcessedTransactionImmediateCommitTimestamp() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_START_BUFFER_TIMESTAMP</code>.
     */
    public void setLastProcessedTransactionStartBufferTimestamp(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_START_BUFFER_TIMESTAMP</code>.
     */
    public Timestamp getLastProcessedTransactionStartBufferTimestamp() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_END_BUFFER_TIMESTAMP</code>.
     */
    public void setLastProcessedTransactionEndBufferTimestamp(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.LAST_PROCESSED_TRANSACTION_END_BUFFER_TIMESTAMP</code>.
     */
    public Timestamp getLastProcessedTransactionEndBufferTimestamp() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION</code>.
     */
    public void setProcessingTransaction(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION</code>.
     */
    public String getProcessingTransaction() {
        return (String) get(11);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public void setProcessingTransactionOriginalCommitTimestamp(Timestamp value) {
        set(12, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getProcessingTransactionOriginalCommitTimestamp() {
        return (Timestamp) get(12);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public void setProcessingTransactionImmediateCommitTimestamp(Timestamp value) {
        set(13, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP</code>.
     */
    public Timestamp getProcessingTransactionImmediateCommitTimestamp() {
        return (Timestamp) get(13);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION_START_BUFFER_TIMESTAMP</code>.
     */
    public void setProcessingTransactionStartBufferTimestamp(Timestamp value) {
        set(14, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_status_by_coordinator.PROCESSING_TRANSACTION_START_BUFFER_TIMESTAMP</code>.
     */
    public Timestamp getProcessingTransactionStartBufferTimestamp() {
        return (Timestamp) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, ULong, ReplicationApplierStatusByCoordinatorServiceState, Integer, String, Timestamp, String, Timestamp, Timestamp, Timestamp, Timestamp, String, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<String, ULong, ReplicationApplierStatusByCoordinatorServiceState, Integer, String, Timestamp, String, Timestamp, Timestamp, Timestamp, Timestamp, String, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.CHANNEL_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field2() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.THREAD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ReplicationApplierStatusByCoordinatorServiceState> field3() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.SERVICE_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_ERROR_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_ERROR_MESSAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_ERROR_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_PROCESSED_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_PROCESSED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_PROCESSED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_PROCESSED_TRANSACTION_START_BUFFER_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.LAST_PROCESSED_TRANSACTION_END_BUFFER_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.PROCESSING_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field13() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.PROCESSING_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field14() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.PROCESSING_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR.PROCESSING_TRANSACTION_START_BUFFER_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getChannelName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component2() {
        return getThreadId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorServiceState component3() {
        return getServiceState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLastErrorNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getLastErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getLastErrorTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getLastProcessedTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getLastProcessedTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getLastProcessedTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getLastProcessedTransactionStartBufferTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getLastProcessedTransactionEndBufferTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getProcessingTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component13() {
        return getProcessingTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component14() {
        return getProcessingTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getProcessingTransactionStartBufferTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getChannelName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value2() {
        return getThreadId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorServiceState value3() {
        return getServiceState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLastErrorNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getLastErrorMessage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getLastErrorTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getLastProcessedTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getLastProcessedTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getLastProcessedTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getLastProcessedTransactionStartBufferTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getLastProcessedTransactionEndBufferTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getProcessingTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value13() {
        return getProcessingTransactionOriginalCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value14() {
        return getProcessingTransactionImmediateCommitTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getProcessingTransactionStartBufferTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value1(String value) {
        setChannelName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value2(ULong value) {
        setThreadId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value3(ReplicationApplierStatusByCoordinatorServiceState value) {
        setServiceState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value4(Integer value) {
        setLastErrorNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value5(String value) {
        setLastErrorMessage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value6(Timestamp value) {
        setLastErrorTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value7(String value) {
        setLastProcessedTransaction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value8(Timestamp value) {
        setLastProcessedTransactionOriginalCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value9(Timestamp value) {
        setLastProcessedTransactionImmediateCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value10(Timestamp value) {
        setLastProcessedTransactionStartBufferTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value11(Timestamp value) {
        setLastProcessedTransactionEndBufferTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value12(String value) {
        setProcessingTransaction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value13(Timestamp value) {
        setProcessingTransactionOriginalCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value14(Timestamp value) {
        setProcessingTransactionImmediateCommitTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord value15(Timestamp value) {
        setProcessingTransactionStartBufferTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierStatusByCoordinatorRecord values(String value1, ULong value2, ReplicationApplierStatusByCoordinatorServiceState value3, Integer value4, String value5, Timestamp value6, String value7, Timestamp value8, Timestamp value9, Timestamp value10, Timestamp value11, String value12, Timestamp value13, Timestamp value14, Timestamp value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplicationApplierStatusByCoordinatorRecord
     */
    public ReplicationApplierStatusByCoordinatorRecord() {
        super(ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR);
    }

    /**
     * Create a detached, initialised ReplicationApplierStatusByCoordinatorRecord
     */
    public ReplicationApplierStatusByCoordinatorRecord(String channelName, ULong threadId, ReplicationApplierStatusByCoordinatorServiceState serviceState, Integer lastErrorNumber, String lastErrorMessage, Timestamp lastErrorTimestamp, String lastProcessedTransaction, Timestamp lastProcessedTransactionOriginalCommitTimestamp, Timestamp lastProcessedTransactionImmediateCommitTimestamp, Timestamp lastProcessedTransactionStartBufferTimestamp, Timestamp lastProcessedTransactionEndBufferTimestamp, String processingTransaction, Timestamp processingTransactionOriginalCommitTimestamp, Timestamp processingTransactionImmediateCommitTimestamp, Timestamp processingTransactionStartBufferTimestamp) {
        super(ReplicationApplierStatusByCoordinator.REPLICATION_APPLIER_STATUS_BY_COORDINATOR);

        set(0, channelName);
        set(1, threadId);
        set(2, serviceState);
        set(3, lastErrorNumber);
        set(4, lastErrorMessage);
        set(5, lastErrorTimestamp);
        set(6, lastProcessedTransaction);
        set(7, lastProcessedTransactionOriginalCommitTimestamp);
        set(8, lastProcessedTransactionImmediateCommitTimestamp);
        set(9, lastProcessedTransactionStartBufferTimestamp);
        set(10, lastProcessedTransactionEndBufferTimestamp);
        set(11, processingTransaction);
        set(12, processingTransactionOriginalCommitTimestamp);
        set(13, processingTransactionImmediateCommitTimestamp);
        set(14, processingTransactionStartBufferTimestamp);
    }
}
