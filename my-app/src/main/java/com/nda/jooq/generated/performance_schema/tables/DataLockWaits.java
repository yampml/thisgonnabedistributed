/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables;


import com.nda.jooq.generated.performance_schema.Indexes;
import com.nda.jooq.generated.performance_schema.PerformanceSchema;
import com.nda.jooq.generated.performance_schema.tables.records.DataLockWaitsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataLockWaits extends TableImpl<DataLockWaitsRecord> {

    private static final long serialVersionUID = -399064652;

    /**
     * The reference instance of <code>performance_schema.data_lock_waits</code>
     */
    public static final DataLockWaits DATA_LOCK_WAITS = new DataLockWaits();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataLockWaitsRecord> getRecordType() {
        return DataLockWaitsRecord.class;
    }

    /**
     * The column <code>performance_schema.data_lock_waits.ENGINE</code>.
     */
    public final TableField<DataLockWaitsRecord, String> ENGINE = createField("ENGINE", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.REQUESTING_ENGINE_LOCK_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, String> REQUESTING_ENGINE_LOCK_ID = createField("REQUESTING_ENGINE_LOCK_ID", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.REQUESTING_ENGINE_TRANSACTION_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> REQUESTING_ENGINE_TRANSACTION_ID = createField("REQUESTING_ENGINE_TRANSACTION_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.REQUESTING_THREAD_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> REQUESTING_THREAD_ID = createField("REQUESTING_THREAD_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.REQUESTING_EVENT_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> REQUESTING_EVENT_ID = createField("REQUESTING_EVENT_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.REQUESTING_OBJECT_INSTANCE_BEGIN</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> REQUESTING_OBJECT_INSTANCE_BEGIN = createField("REQUESTING_OBJECT_INSTANCE_BEGIN", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.BLOCKING_ENGINE_LOCK_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, String> BLOCKING_ENGINE_LOCK_ID = createField("BLOCKING_ENGINE_LOCK_ID", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.BLOCKING_ENGINE_TRANSACTION_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> BLOCKING_ENGINE_TRANSACTION_ID = createField("BLOCKING_ENGINE_TRANSACTION_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.BLOCKING_THREAD_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> BLOCKING_THREAD_ID = createField("BLOCKING_THREAD_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.BLOCKING_EVENT_ID</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> BLOCKING_EVENT_ID = createField("BLOCKING_EVENT_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.data_lock_waits.BLOCKING_OBJECT_INSTANCE_BEGIN</code>.
     */
    public final TableField<DataLockWaitsRecord, ULong> BLOCKING_OBJECT_INSTANCE_BEGIN = createField("BLOCKING_OBJECT_INSTANCE_BEGIN", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>performance_schema.data_lock_waits</code> table reference
     */
    public DataLockWaits() {
        this(DSL.name("data_lock_waits"), null);
    }

    /**
     * Create an aliased <code>performance_schema.data_lock_waits</code> table reference
     */
    public DataLockWaits(String alias) {
        this(DSL.name(alias), DATA_LOCK_WAITS);
    }

    /**
     * Create an aliased <code>performance_schema.data_lock_waits</code> table reference
     */
    public DataLockWaits(Name alias) {
        this(alias, DATA_LOCK_WAITS);
    }

    private DataLockWaits(Name alias, Table<DataLockWaitsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataLockWaits(Name alias, Table<DataLockWaitsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DATA_LOCK_WAITS_BLOCKING_ENGINE_LOCK_ID, Indexes.DATA_LOCK_WAITS_BLOCKING_ENGINE_TRANSACTION_ID, Indexes.DATA_LOCK_WAITS_BLOCKING_THREAD_ID, Indexes.DATA_LOCK_WAITS_REQUESTING_ENGINE_LOCK_ID, Indexes.DATA_LOCK_WAITS_REQUESTING_ENGINE_TRANSACTION_ID, Indexes.DATA_LOCK_WAITS_REQUESTING_THREAD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataLockWaits as(String alias) {
        return new DataLockWaits(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataLockWaits as(Name alias) {
        return new DataLockWaits(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataLockWaits rename(String name) {
        return new DataLockWaits(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataLockWaits rename(Name name) {
        return new DataLockWaits(name, null);
    }
}
