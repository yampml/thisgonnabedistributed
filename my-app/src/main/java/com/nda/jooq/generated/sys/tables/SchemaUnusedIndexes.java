/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.tables;


import com.nda.jooq.generated.sys.Sys;
import com.nda.jooq.generated.sys.tables.records.SchemaUnusedIndexesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaUnusedIndexes extends TableImpl<SchemaUnusedIndexesRecord> {

    private static final long serialVersionUID = 1645379717;

    /**
     * The reference instance of <code>sys.schema_unused_indexes</code>
     */
    public static final SchemaUnusedIndexes SCHEMA_UNUSED_INDEXES = new SchemaUnusedIndexes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchemaUnusedIndexesRecord> getRecordType() {
        return SchemaUnusedIndexesRecord.class;
    }

    /**
     * The column <code>sys.schema_unused_indexes.object_schema</code>.
     */
    public final TableField<SchemaUnusedIndexesRecord, String> OBJECT_SCHEMA = createField("object_schema", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.schema_unused_indexes.object_name</code>.
     */
    public final TableField<SchemaUnusedIndexesRecord, String> OBJECT_NAME = createField("object_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.schema_unused_indexes.index_name</code>.
     */
    public final TableField<SchemaUnusedIndexesRecord, String> INDEX_NAME = createField("index_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>sys.schema_unused_indexes</code> table reference
     */
    public SchemaUnusedIndexes() {
        this(DSL.name("schema_unused_indexes"), null);
    }

    /**
     * Create an aliased <code>sys.schema_unused_indexes</code> table reference
     */
    public SchemaUnusedIndexes(String alias) {
        this(DSL.name(alias), SCHEMA_UNUSED_INDEXES);
    }

    /**
     * Create an aliased <code>sys.schema_unused_indexes</code> table reference
     */
    public SchemaUnusedIndexes(Name alias) {
        this(alias, SCHEMA_UNUSED_INDEXES);
    }

    private SchemaUnusedIndexes(Name alias, Table<SchemaUnusedIndexesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchemaUnusedIndexes(Name alias, Table<SchemaUnusedIndexesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaUnusedIndexes as(String alias) {
        return new SchemaUnusedIndexes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaUnusedIndexes as(Name alias) {
        return new SchemaUnusedIndexes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchemaUnusedIndexes rename(String name) {
        return new SchemaUnusedIndexes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchemaUnusedIndexes rename(Name name) {
        return new SchemaUnusedIndexes(name, null);
    }
}
