/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.mysql.tables.records;


import com.nda.jooq.generated.mysql.tables.ReplicationGroupConfigurationVersion;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * The group configuration version.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationGroupConfigurationVersionRecord extends UpdatableRecordImpl<ReplicationGroupConfigurationVersionRecord> implements Record2<String, ULong> {

    private static final long serialVersionUID = 1174328780;

    /**
     * Setter for <code>mysql.replication_group_configuration_version.name</code>. The configuration name.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mysql.replication_group_configuration_version.name</code>. The configuration name.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.replication_group_configuration_version.version</code>. The version of the configuration name.
     */
    public void setVersion(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>mysql.replication_group_configuration_version.version</code>. The version of the configuration name.
     */
    public ULong getVersion() {
        return (ULong) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, ULong> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, ULong> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ReplicationGroupConfigurationVersion.REPLICATION_GROUP_CONFIGURATION_VERSION.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field2() {
        return ReplicationGroupConfigurationVersion.REPLICATION_GROUP_CONFIGURATION_VERSION.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value2() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupConfigurationVersionRecord value1(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupConfigurationVersionRecord value2(ULong value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupConfigurationVersionRecord values(String value1, ULong value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplicationGroupConfigurationVersionRecord
     */
    public ReplicationGroupConfigurationVersionRecord() {
        super(ReplicationGroupConfigurationVersion.REPLICATION_GROUP_CONFIGURATION_VERSION);
    }

    /**
     * Create a detached, initialised ReplicationGroupConfigurationVersionRecord
     */
    public ReplicationGroupConfigurationVersionRecord(String name, ULong version) {
        super(ReplicationGroupConfigurationVersion.REPLICATION_GROUP_CONFIGURATION_VERSION);

        set(0, name);
        set(1, version);
    }
}
