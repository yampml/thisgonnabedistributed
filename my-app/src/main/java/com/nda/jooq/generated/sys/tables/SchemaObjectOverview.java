/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.tables;


import com.nda.jooq.generated.sys.Sys;
import com.nda.jooq.generated.sys.tables.records.SchemaObjectOverviewRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaObjectOverview extends TableImpl<SchemaObjectOverviewRecord> {

    private static final long serialVersionUID = 821822934;

    /**
     * The reference instance of <code>sys.schema_object_overview</code>
     */
    public static final SchemaObjectOverview SCHEMA_OBJECT_OVERVIEW = new SchemaObjectOverview();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SchemaObjectOverviewRecord> getRecordType() {
        return SchemaObjectOverviewRecord.class;
    }

    /**
     * The column <code>sys.schema_object_overview.db</code>.
     */
    public final TableField<SchemaObjectOverviewRecord, String> DB = createField("db", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>sys.schema_object_overview.object_type</code>.
     */
    public final TableField<SchemaObjectOverviewRecord, String> OBJECT_TYPE = createField("object_type", org.jooq.impl.SQLDataType.VARCHAR(19), this, "");

    /**
     * The column <code>sys.schema_object_overview.count</code>.
     */
    public final TableField<SchemaObjectOverviewRecord, Long> COUNT = createField("count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>sys.schema_object_overview</code> table reference
     */
    public SchemaObjectOverview() {
        this(DSL.name("schema_object_overview"), null);
    }

    /**
     * Create an aliased <code>sys.schema_object_overview</code> table reference
     */
    public SchemaObjectOverview(String alias) {
        this(DSL.name(alias), SCHEMA_OBJECT_OVERVIEW);
    }

    /**
     * Create an aliased <code>sys.schema_object_overview</code> table reference
     */
    public SchemaObjectOverview(Name alias) {
        this(alias, SCHEMA_OBJECT_OVERVIEW);
    }

    private SchemaObjectOverview(Name alias, Table<SchemaObjectOverviewRecord> aliased) {
        this(alias, aliased, null);
    }

    private SchemaObjectOverview(Name alias, Table<SchemaObjectOverviewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaObjectOverview as(String alias) {
        return new SchemaObjectOverview(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaObjectOverview as(Name alias) {
        return new SchemaObjectOverview(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SchemaObjectOverview rename(String name) {
        return new SchemaObjectOverview(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SchemaObjectOverview rename(Name name) {
        return new SchemaObjectOverview(name, null);
    }
}
