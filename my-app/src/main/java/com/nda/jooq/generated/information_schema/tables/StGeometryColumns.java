/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.information_schema.tables;


import com.nda.jooq.generated.information_schema.InformationSchema;
import com.nda.jooq.generated.information_schema.tables.records.StGeometryColumnsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StGeometryColumns extends TableImpl<StGeometryColumnsRecord> {

    private static final long serialVersionUID = 958492561;

    /**
     * The reference instance of <code>information_schema.ST_GEOMETRY_COLUMNS</code>
     */
    public static final StGeometryColumns ST_GEOMETRY_COLUMNS = new StGeometryColumns();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StGeometryColumnsRecord> getRecordType() {
        return StGeometryColumnsRecord.class;
    }

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.TABLE_CATALOG</code>.
     */
    public final TableField<StGeometryColumnsRecord, String> TABLE_CATALOG = createField("TABLE_CATALOG", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.TABLE_SCHEMA</code>.
     */
    public final TableField<StGeometryColumnsRecord, String> TABLE_SCHEMA = createField("TABLE_SCHEMA", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.TABLE_NAME</code>.
     */
    public final TableField<StGeometryColumnsRecord, String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.COLUMN_NAME</code>.
     */
    public final TableField<StGeometryColumnsRecord, String> COLUMN_NAME = createField("COLUMN_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.SRS_NAME</code>.
     */
    public final TableField<StGeometryColumnsRecord, String> SRS_NAME = createField("SRS_NAME", org.jooq.impl.SQLDataType.VARCHAR(80), this, "");

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.SRS_ID</code>.
     */
    public final TableField<StGeometryColumnsRecord, UInteger> SRS_ID = createField("SRS_ID", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>information_schema.ST_GEOMETRY_COLUMNS.GEOMETRY_TYPE_NAME</code>.
     */
    public final TableField<StGeometryColumnsRecord, String> GEOMETRY_TYPE_NAME = createField("GEOMETRY_TYPE_NAME", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>information_schema.ST_GEOMETRY_COLUMNS</code> table reference
     */
    public StGeometryColumns() {
        this(DSL.name("ST_GEOMETRY_COLUMNS"), null);
    }

    /**
     * Create an aliased <code>information_schema.ST_GEOMETRY_COLUMNS</code> table reference
     */
    public StGeometryColumns(String alias) {
        this(DSL.name(alias), ST_GEOMETRY_COLUMNS);
    }

    /**
     * Create an aliased <code>information_schema.ST_GEOMETRY_COLUMNS</code> table reference
     */
    public StGeometryColumns(Name alias) {
        this(alias, ST_GEOMETRY_COLUMNS);
    }

    private StGeometryColumns(Name alias, Table<StGeometryColumnsRecord> aliased) {
        this(alias, aliased, null);
    }

    private StGeometryColumns(Name alias, Table<StGeometryColumnsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StGeometryColumns as(String alias) {
        return new StGeometryColumns(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StGeometryColumns as(Name alias) {
        return new StGeometryColumns(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StGeometryColumns rename(String name) {
        return new StGeometryColumns(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StGeometryColumns rename(Name name) {
        return new StGeometryColumns(name, null);
    }
}
