/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables;


import com.nda.jooq.generated.performance_schema.Indexes;
import com.nda.jooq.generated.performance_schema.Keys;
import com.nda.jooq.generated.performance_schema.PerformanceSchema;
import com.nda.jooq.generated.performance_schema.tables.records.StatusByAccountRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatusByAccount extends TableImpl<StatusByAccountRecord> {

    private static final long serialVersionUID = -1336911942;

    /**
     * The reference instance of <code>performance_schema.status_by_account</code>
     */
    public static final StatusByAccount STATUS_BY_ACCOUNT = new StatusByAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatusByAccountRecord> getRecordType() {
        return StatusByAccountRecord.class;
    }

    /**
     * The column <code>performance_schema.status_by_account.USER</code>.
     */
    public final TableField<StatusByAccountRecord, String> USER = createField("USER", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>performance_schema.status_by_account.HOST</code>.
     */
    public final TableField<StatusByAccountRecord, String> HOST = createField("HOST", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * The column <code>performance_schema.status_by_account.VARIABLE_NAME</code>.
     */
    public final TableField<StatusByAccountRecord, String> VARIABLE_NAME = createField("VARIABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.status_by_account.VARIABLE_VALUE</code>.
     */
    public final TableField<StatusByAccountRecord, String> VARIABLE_VALUE = createField("VARIABLE_VALUE", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * Create a <code>performance_schema.status_by_account</code> table reference
     */
    public StatusByAccount() {
        this(DSL.name("status_by_account"), null);
    }

    /**
     * Create an aliased <code>performance_schema.status_by_account</code> table reference
     */
    public StatusByAccount(String alias) {
        this(DSL.name(alias), STATUS_BY_ACCOUNT);
    }

    /**
     * Create an aliased <code>performance_schema.status_by_account</code> table reference
     */
    public StatusByAccount(Name alias) {
        this(alias, STATUS_BY_ACCOUNT);
    }

    private StatusByAccount(Name alias, Table<StatusByAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatusByAccount(Name alias, Table<StatusByAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STATUS_BY_ACCOUNT_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatusByAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<StatusByAccountRecord>>asList(Keys.KEY_STATUS_BY_ACCOUNT_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatusByAccount as(String alias) {
        return new StatusByAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatusByAccount as(Name alias) {
        return new StatusByAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatusByAccount rename(String name) {
        return new StatusByAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StatusByAccount rename(Name name) {
        return new StatusByAccount(name, null);
    }
}
