/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables;


import com.nda.jooq.generated.performance_schema.Indexes;
import com.nda.jooq.generated.performance_schema.Keys;
import com.nda.jooq.generated.performance_schema.PerformanceSchema;
import com.nda.jooq.generated.performance_schema.tables.records.UserDefinedFunctionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDefinedFunctions extends TableImpl<UserDefinedFunctionsRecord> {

    private static final long serialVersionUID = 964926130;

    /**
     * The reference instance of <code>performance_schema.user_defined_functions</code>
     */
    public static final UserDefinedFunctions USER_DEFINED_FUNCTIONS = new UserDefinedFunctions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDefinedFunctionsRecord> getRecordType() {
        return UserDefinedFunctionsRecord.class;
    }

    /**
     * The column <code>performance_schema.user_defined_functions.UDF_NAME</code>.
     */
    public final TableField<UserDefinedFunctionsRecord, String> UDF_NAME = createField("UDF_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.user_defined_functions.UDF_RETURN_TYPE</code>.
     */
    public final TableField<UserDefinedFunctionsRecord, String> UDF_RETURN_TYPE = createField("UDF_RETURN_TYPE", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>performance_schema.user_defined_functions.UDF_TYPE</code>.
     */
    public final TableField<UserDefinedFunctionsRecord, String> UDF_TYPE = createField("UDF_TYPE", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>performance_schema.user_defined_functions.UDF_LIBRARY</code>.
     */
    public final TableField<UserDefinedFunctionsRecord, String> UDF_LIBRARY = createField("UDF_LIBRARY", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>performance_schema.user_defined_functions.UDF_USAGE_COUNT</code>.
     */
    public final TableField<UserDefinedFunctionsRecord, Long> UDF_USAGE_COUNT = createField("UDF_USAGE_COUNT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>performance_schema.user_defined_functions</code> table reference
     */
    public UserDefinedFunctions() {
        this(DSL.name("user_defined_functions"), null);
    }

    /**
     * Create an aliased <code>performance_schema.user_defined_functions</code> table reference
     */
    public UserDefinedFunctions(String alias) {
        this(DSL.name(alias), USER_DEFINED_FUNCTIONS);
    }

    /**
     * Create an aliased <code>performance_schema.user_defined_functions</code> table reference
     */
    public UserDefinedFunctions(Name alias) {
        this(alias, USER_DEFINED_FUNCTIONS);
    }

    private UserDefinedFunctions(Name alias, Table<UserDefinedFunctionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDefinedFunctions(Name alias, Table<UserDefinedFunctionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_DEFINED_FUNCTIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserDefinedFunctionsRecord> getPrimaryKey() {
        return Keys.KEY_USER_DEFINED_FUNCTIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDefinedFunctionsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDefinedFunctionsRecord>>asList(Keys.KEY_USER_DEFINED_FUNCTIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDefinedFunctions as(String alias) {
        return new UserDefinedFunctions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDefinedFunctions as(Name alias) {
        return new UserDefinedFunctions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDefinedFunctions rename(String name) {
        return new UserDefinedFunctions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDefinedFunctions rename(Name name) {
        return new UserDefinedFunctions(name, null);
    }
}
