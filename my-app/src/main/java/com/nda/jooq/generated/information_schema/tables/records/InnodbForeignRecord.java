/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.information_schema.tables.records;


import com.nda.jooq.generated.information_schema.tables.InnodbForeign;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbForeignRecord extends TableRecordImpl<InnodbForeignRecord> implements Record5<String, String, String, Long, ULong> {

    private static final long serialVersionUID = -1539494314;

    /**
     * Setter for <code>information_schema.INNODB_FOREIGN.ID</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_FOREIGN.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.INNODB_FOREIGN.FOR_NAME</code>.
     */
    public void setForName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_FOREIGN.FOR_NAME</code>.
     */
    public String getForName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.INNODB_FOREIGN.REF_NAME</code>.
     */
    public void setRefName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_FOREIGN.REF_NAME</code>.
     */
    public String getRefName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.INNODB_FOREIGN.N_COLS</code>.
     */
    public void setNCols(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_FOREIGN.N_COLS</code>.
     */
    public Long getNCols() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>information_schema.INNODB_FOREIGN.TYPE</code>.
     */
    public void setType(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.INNODB_FOREIGN.TYPE</code>.
     */
    public ULong getType() {
        return (ULong) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, Long, ULong> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, String, String, Long, ULong> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return InnodbForeign.INNODB_FOREIGN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return InnodbForeign.INNODB_FOREIGN.FOR_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return InnodbForeign.INNODB_FOREIGN.REF_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return InnodbForeign.INNODB_FOREIGN.N_COLS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field5() {
        return InnodbForeign.INNODB_FOREIGN.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getForName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRefName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getNCols();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getForName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRefName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getNCols();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value5() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbForeignRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbForeignRecord value2(String value) {
        setForName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbForeignRecord value3(String value) {
        setRefName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbForeignRecord value4(Long value) {
        setNCols(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbForeignRecord value5(ULong value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbForeignRecord values(String value1, String value2, String value3, Long value4, ULong value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InnodbForeignRecord
     */
    public InnodbForeignRecord() {
        super(InnodbForeign.INNODB_FOREIGN);
    }

    /**
     * Create a detached, initialised InnodbForeignRecord
     */
    public InnodbForeignRecord(String id, String forName, String refName, Long nCols, ULong type) {
        super(InnodbForeign.INNODB_FOREIGN);

        set(0, id);
        set(1, forName);
        set(2, refName);
        set(3, nCols);
        set(4, type);
    }
}
