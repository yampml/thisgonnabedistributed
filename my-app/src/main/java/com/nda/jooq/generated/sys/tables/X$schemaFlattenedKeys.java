/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.tables;


import com.nda.jooq.generated.sys.Sys;
import com.nda.jooq.generated.sys.tables.records.X$schemaFlattenedKeysRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$schemaFlattenedKeys extends TableImpl<X$schemaFlattenedKeysRecord> {

    private static final long serialVersionUID = -2001906329;

    /**
     * The reference instance of <code>sys.x$schema_flattened_keys</code>
     */
    public static final X$schemaFlattenedKeys X$SCHEMA_FLATTENED_KEYS = new X$schemaFlattenedKeys();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<X$schemaFlattenedKeysRecord> getRecordType() {
        return X$schemaFlattenedKeysRecord.class;
    }

    /**
     * The column <code>sys.x$schema_flattened_keys.table_schema</code>.
     */
    public final TableField<X$schemaFlattenedKeysRecord, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_flattened_keys.table_name</code>.
     */
    public final TableField<X$schemaFlattenedKeysRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>sys.x$schema_flattened_keys.index_name</code>.
     */
    public final TableField<X$schemaFlattenedKeysRecord, String> INDEX_NAME = createField("index_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$schema_flattened_keys.non_unique</code>.
     */
    public final TableField<X$schemaFlattenedKeysRecord, Integer> NON_UNIQUE = createField("non_unique", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sys.x$schema_flattened_keys.subpart_exists</code>.
     */
    public final TableField<X$schemaFlattenedKeysRecord, Long> SUBPART_EXISTS = createField("subpart_exists", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>sys.x$schema_flattened_keys.index_columns</code>.
     */
    public final TableField<X$schemaFlattenedKeysRecord, String> INDEX_COLUMNS = createField("index_columns", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>sys.x$schema_flattened_keys</code> table reference
     */
    public X$schemaFlattenedKeys() {
        this(DSL.name("x$schema_flattened_keys"), null);
    }

    /**
     * Create an aliased <code>sys.x$schema_flattened_keys</code> table reference
     */
    public X$schemaFlattenedKeys(String alias) {
        this(DSL.name(alias), X$SCHEMA_FLATTENED_KEYS);
    }

    /**
     * Create an aliased <code>sys.x$schema_flattened_keys</code> table reference
     */
    public X$schemaFlattenedKeys(Name alias) {
        this(alias, X$SCHEMA_FLATTENED_KEYS);
    }

    private X$schemaFlattenedKeys(Name alias, Table<X$schemaFlattenedKeysRecord> aliased) {
        this(alias, aliased, null);
    }

    private X$schemaFlattenedKeys(Name alias, Table<X$schemaFlattenedKeysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public X$schemaFlattenedKeys as(String alias) {
        return new X$schemaFlattenedKeys(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public X$schemaFlattenedKeys as(Name alias) {
        return new X$schemaFlattenedKeys(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$schemaFlattenedKeys rename(String name) {
        return new X$schemaFlattenedKeys(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$schemaFlattenedKeys rename(Name name) {
        return new X$schemaFlattenedKeys(name, null);
    }
}
