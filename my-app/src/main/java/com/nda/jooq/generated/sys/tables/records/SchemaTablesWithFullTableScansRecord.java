/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.sys.tables.records;


import com.nda.jooq.generated.sys.tables.SchemaTablesWithFullTableScans;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaTablesWithFullTableScansRecord extends TableRecordImpl<SchemaTablesWithFullTableScansRecord> implements Record4<String, String, ULong, String> {

    private static final long serialVersionUID = 617789247;

    /**
     * Setter for <code>sys.schema_tables_with_full_table_scans.object_schema</code>.
     */
    public void setObjectSchema(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sys.schema_tables_with_full_table_scans.object_schema</code>.
     */
    public String getObjectSchema() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sys.schema_tables_with_full_table_scans.object_name</code>.
     */
    public void setObjectName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sys.schema_tables_with_full_table_scans.object_name</code>.
     */
    public String getObjectName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sys.schema_tables_with_full_table_scans.rows_full_scanned</code>.
     */
    public void setRowsFullScanned(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>sys.schema_tables_with_full_table_scans.rows_full_scanned</code>.
     */
    public ULong getRowsFullScanned() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>sys.schema_tables_with_full_table_scans.latency</code>.
     */
    public void setLatency(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sys.schema_tables_with_full_table_scans.latency</code>.
     */
    public String getLatency() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, ULong, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, ULong, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SchemaTablesWithFullTableScans.SCHEMA_TABLES_WITH_FULL_TABLE_SCANS.OBJECT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SchemaTablesWithFullTableScans.SCHEMA_TABLES_WITH_FULL_TABLE_SCANS.OBJECT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field3() {
        return SchemaTablesWithFullTableScans.SCHEMA_TABLES_WITH_FULL_TABLE_SCANS.ROWS_FULL_SCANNED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SchemaTablesWithFullTableScans.SCHEMA_TABLES_WITH_FULL_TABLE_SCANS.LATENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getObjectSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getObjectName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong component3() {
        return getRowsFullScanned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getLatency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getObjectSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getObjectName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value3() {
        return getRowsFullScanned();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLatency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaTablesWithFullTableScansRecord value1(String value) {
        setObjectSchema(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaTablesWithFullTableScansRecord value2(String value) {
        setObjectName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaTablesWithFullTableScansRecord value3(ULong value) {
        setRowsFullScanned(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaTablesWithFullTableScansRecord value4(String value) {
        setLatency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SchemaTablesWithFullTableScansRecord values(String value1, String value2, ULong value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaTablesWithFullTableScansRecord
     */
    public SchemaTablesWithFullTableScansRecord() {
        super(SchemaTablesWithFullTableScans.SCHEMA_TABLES_WITH_FULL_TABLE_SCANS);
    }

    /**
     * Create a detached, initialised SchemaTablesWithFullTableScansRecord
     */
    public SchemaTablesWithFullTableScansRecord(String objectSchema, String objectName, ULong rowsFullScanned, String latency) {
        super(SchemaTablesWithFullTableScans.SCHEMA_TABLES_WITH_FULL_TABLE_SCANS);

        set(0, objectSchema);
        set(1, objectName);
        set(2, rowsFullScanned);
        set(3, latency);
    }
}
