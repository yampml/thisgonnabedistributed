/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables;


import com.nda.jooq.generated.performance_schema.Indexes;
import com.nda.jooq.generated.performance_schema.Keys;
import com.nda.jooq.generated.performance_schema.PerformanceSchema;
import com.nda.jooq.generated.performance_schema.enums.ErrorLogPrio;
import com.nda.jooq.generated.performance_schema.tables.records.ErrorLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ErrorLog extends TableImpl<ErrorLogRecord> {

    private static final long serialVersionUID = 1048307205;

    /**
     * The reference instance of <code>performance_schema.error_log</code>
     */
    public static final ErrorLog ERROR_LOG = new ErrorLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ErrorLogRecord> getRecordType() {
        return ErrorLogRecord.class;
    }

    /**
     * The column <code>performance_schema.error_log.LOGGED</code>.
     */
    public final TableField<ErrorLogRecord, Timestamp> LOGGED = createField("LOGGED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>performance_schema.error_log.THREAD_ID</code>.
     */
    public final TableField<ErrorLogRecord, ULong> THREAD_ID = createField("THREAD_ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>performance_schema.error_log.PRIO</code>.
     */
    public final TableField<ErrorLogRecord, ErrorLogPrio> PRIO = createField("PRIO", org.jooq.impl.SQLDataType.VARCHAR(7).nullable(false).asEnumDataType(com.nda.jooq.generated.performance_schema.enums.ErrorLogPrio.class), this, "");

    /**
     * The column <code>performance_schema.error_log.ERROR_CODE</code>.
     */
    public final TableField<ErrorLogRecord, String> ERROR_CODE = createField("ERROR_CODE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>performance_schema.error_log.SUBSYSTEM</code>.
     */
    public final TableField<ErrorLogRecord, String> SUBSYSTEM = createField("SUBSYSTEM", org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>performance_schema.error_log.DATA</code>.
     */
    public final TableField<ErrorLogRecord, String> DATA = createField("DATA", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>performance_schema.error_log</code> table reference
     */
    public ErrorLog() {
        this(DSL.name("error_log"), null);
    }

    /**
     * Create an aliased <code>performance_schema.error_log</code> table reference
     */
    public ErrorLog(String alias) {
        this(DSL.name(alias), ERROR_LOG);
    }

    /**
     * Create an aliased <code>performance_schema.error_log</code> table reference
     */
    public ErrorLog(Name alias) {
        this(alias, ERROR_LOG);
    }

    private ErrorLog(Name alias, Table<ErrorLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ErrorLog(Name alias, Table<ErrorLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ERROR_LOG_ERROR_CODE, Indexes.ERROR_LOG_PRIMARY, Indexes.ERROR_LOG_PRIO, Indexes.ERROR_LOG_SUBSYSTEM, Indexes.ERROR_LOG_THREAD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ErrorLogRecord> getPrimaryKey() {
        return Keys.KEY_ERROR_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ErrorLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ErrorLogRecord>>asList(Keys.KEY_ERROR_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ErrorLog as(String alias) {
        return new ErrorLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ErrorLog as(Name alias) {
        return new ErrorLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ErrorLog rename(String name) {
        return new ErrorLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ErrorLog rename(Name name) {
        return new ErrorLog(name, null);
    }
}
