/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables;


import com.nda.jooq.generated.performance_schema.PerformanceSchema;
import com.nda.jooq.generated.performance_schema.enums.VariablesInfoVariableSource;
import com.nda.jooq.generated.performance_schema.tables.records.VariablesInfoRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VariablesInfo extends TableImpl<VariablesInfoRecord> {

    private static final long serialVersionUID = -1794336947;

    /**
     * The reference instance of <code>performance_schema.variables_info</code>
     */
    public static final VariablesInfo VARIABLES_INFO = new VariablesInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VariablesInfoRecord> getRecordType() {
        return VariablesInfoRecord.class;
    }

    /**
     * The column <code>performance_schema.variables_info.VARIABLE_NAME</code>.
     */
    public final TableField<VariablesInfoRecord, String> VARIABLE_NAME = createField("VARIABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.variables_info.VARIABLE_SOURCE</code>.
     */
    public final TableField<VariablesInfoRecord, VariablesInfoVariableSource> VARIABLE_SOURCE = createField("VARIABLE_SOURCE", org.jooq.impl.SQLDataType.VARCHAR(12).defaultValue(org.jooq.impl.DSL.inline("COMPILED", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.nda.jooq.generated.performance_schema.enums.VariablesInfoVariableSource.class), this, "");

    /**
     * The column <code>performance_schema.variables_info.VARIABLE_PATH</code>.
     */
    public final TableField<VariablesInfoRecord, String> VARIABLE_PATH = createField("VARIABLE_PATH", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>performance_schema.variables_info.MIN_VALUE</code>.
     */
    public final TableField<VariablesInfoRecord, String> MIN_VALUE = createField("MIN_VALUE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>performance_schema.variables_info.MAX_VALUE</code>.
     */
    public final TableField<VariablesInfoRecord, String> MAX_VALUE = createField("MAX_VALUE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>performance_schema.variables_info.SET_TIME</code>.
     */
    public final TableField<VariablesInfoRecord, Timestamp> SET_TIME = createField("SET_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>performance_schema.variables_info.SET_USER</code>.
     */
    public final TableField<VariablesInfoRecord, String> SET_USER = createField("SET_USER", org.jooq.impl.SQLDataType.CHAR(32), this, "");

    /**
     * The column <code>performance_schema.variables_info.SET_HOST</code>.
     */
    public final TableField<VariablesInfoRecord, String> SET_HOST = createField("SET_HOST", org.jooq.impl.SQLDataType.CHAR(255), this, "");

    /**
     * Create a <code>performance_schema.variables_info</code> table reference
     */
    public VariablesInfo() {
        this(DSL.name("variables_info"), null);
    }

    /**
     * Create an aliased <code>performance_schema.variables_info</code> table reference
     */
    public VariablesInfo(String alias) {
        this(DSL.name(alias), VARIABLES_INFO);
    }

    /**
     * Create an aliased <code>performance_schema.variables_info</code> table reference
     */
    public VariablesInfo(Name alias) {
        this(alias, VARIABLES_INFO);
    }

    private VariablesInfo(Name alias, Table<VariablesInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private VariablesInfo(Name alias, Table<VariablesInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VariablesInfo as(String alias) {
        return new VariablesInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VariablesInfo as(Name alias) {
        return new VariablesInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VariablesInfo rename(String name) {
        return new VariablesInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VariablesInfo rename(Name name) {
        return new VariablesInfo(name, null);
    }
}
