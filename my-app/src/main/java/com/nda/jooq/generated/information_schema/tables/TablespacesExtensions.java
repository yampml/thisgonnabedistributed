/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.information_schema.tables;


import com.nda.jooq.generated.information_schema.InformationSchema;
import com.nda.jooq.generated.information_schema.tables.records.TablespacesExtensionsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TablespacesExtensions extends TableImpl<TablespacesExtensionsRecord> {

    private static final long serialVersionUID = 336196205;

    /**
     * The reference instance of <code>information_schema.TABLESPACES_EXTENSIONS</code>
     */
    public static final TablespacesExtensions TABLESPACES_EXTENSIONS = new TablespacesExtensions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TablespacesExtensionsRecord> getRecordType() {
        return TablespacesExtensionsRecord.class;
    }

    /**
     * The column <code>information_schema.TABLESPACES_EXTENSIONS.TABLESPACE_NAME</code>.
     */
    public final TableField<TablespacesExtensionsRecord, String> TABLESPACE_NAME = createField("TABLESPACE_NAME", org.jooq.impl.SQLDataType.VARCHAR(268).nullable(false), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<TablespacesExtensionsRecord, Object> ENGINE_ATTRIBUTE = createField("ENGINE_ATTRIBUTE", org.jooq.impl.DefaultDataType.getDefaultDataType("json"), this, "");

    /**
     * Create a <code>information_schema.TABLESPACES_EXTENSIONS</code> table reference
     */
    public TablespacesExtensions() {
        this(DSL.name("TABLESPACES_EXTENSIONS"), null);
    }

    /**
     * Create an aliased <code>information_schema.TABLESPACES_EXTENSIONS</code> table reference
     */
    public TablespacesExtensions(String alias) {
        this(DSL.name(alias), TABLESPACES_EXTENSIONS);
    }

    /**
     * Create an aliased <code>information_schema.TABLESPACES_EXTENSIONS</code> table reference
     */
    public TablespacesExtensions(Name alias) {
        this(alias, TABLESPACES_EXTENSIONS);
    }

    private TablespacesExtensions(Name alias, Table<TablespacesExtensionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TablespacesExtensions(Name alias, Table<TablespacesExtensionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablespacesExtensions as(String alias) {
        return new TablespacesExtensions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TablespacesExtensions as(Name alias) {
        return new TablespacesExtensions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TablespacesExtensions rename(String name) {
        return new TablespacesExtensions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TablespacesExtensions rename(Name name) {
        return new TablespacesExtensions(name, null);
    }
}
