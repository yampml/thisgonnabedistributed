/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.information_schema.tables;


import com.nda.jooq.generated.information_schema.InformationSchema;
import com.nda.jooq.generated.information_schema.tables.records.InnodbTablespacesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbTablespaces extends TableImpl<InnodbTablespacesRecord> {

    private static final long serialVersionUID = -1533577620;

    /**
     * The reference instance of <code>information_schema.INNODB_TABLESPACES</code>
     */
    public static final InnodbTablespaces INNODB_TABLESPACES = new InnodbTablespaces();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InnodbTablespacesRecord> getRecordType() {
        return InnodbTablespacesRecord.class;
    }

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.SPACE</code>.
     */
    public final TableField<InnodbTablespacesRecord, UInteger> SPACE = createField("SPACE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.NAME</code>.
     */
    public final TableField<InnodbTablespacesRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(218).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.FLAG</code>.
     */
    public final TableField<InnodbTablespacesRecord, UInteger> FLAG = createField("FLAG", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.ROW_FORMAT</code>.
     */
    public final TableField<InnodbTablespacesRecord, String> ROW_FORMAT = createField("ROW_FORMAT", org.jooq.impl.SQLDataType.VARCHAR(7).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.PAGE_SIZE</code>.
     */
    public final TableField<InnodbTablespacesRecord, UInteger> PAGE_SIZE = createField("PAGE_SIZE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.ZIP_PAGE_SIZE</code>.
     */
    public final TableField<InnodbTablespacesRecord, UInteger> ZIP_PAGE_SIZE = createField("ZIP_PAGE_SIZE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.SPACE_TYPE</code>.
     */
    public final TableField<InnodbTablespacesRecord, String> SPACE_TYPE = createField("SPACE_TYPE", org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.FS_BLOCK_SIZE</code>.
     */
    public final TableField<InnodbTablespacesRecord, UInteger> FS_BLOCK_SIZE = createField("FS_BLOCK_SIZE", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.FILE_SIZE</code>.
     */
    public final TableField<InnodbTablespacesRecord, ULong> FILE_SIZE = createField("FILE_SIZE", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.ALLOCATED_SIZE</code>.
     */
    public final TableField<InnodbTablespacesRecord, ULong> ALLOCATED_SIZE = createField("ALLOCATED_SIZE", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.AUTOEXTEND_SIZE</code>.
     */
    public final TableField<InnodbTablespacesRecord, ULong> AUTOEXTEND_SIZE = createField("AUTOEXTEND_SIZE", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.SERVER_VERSION</code>.
     */
    public final TableField<InnodbTablespacesRecord, String> SERVER_VERSION = createField("SERVER_VERSION", org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.SPACE_VERSION</code>.
     */
    public final TableField<InnodbTablespacesRecord, UInteger> SPACE_VERSION = createField("SPACE_VERSION", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.ENCRYPTION</code>.
     */
    public final TableField<InnodbTablespacesRecord, String> ENCRYPTION = createField("ENCRYPTION", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES.STATE</code>.
     */
    public final TableField<InnodbTablespacesRecord, String> STATE = createField("STATE", org.jooq.impl.SQLDataType.VARCHAR(3).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>information_schema.INNODB_TABLESPACES</code> table reference
     */
    public InnodbTablespaces() {
        this(DSL.name("INNODB_TABLESPACES"), null);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_TABLESPACES</code> table reference
     */
    public InnodbTablespaces(String alias) {
        this(DSL.name(alias), INNODB_TABLESPACES);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_TABLESPACES</code> table reference
     */
    public InnodbTablespaces(Name alias) {
        this(alias, INNODB_TABLESPACES);
    }

    private InnodbTablespaces(Name alias, Table<InnodbTablespacesRecord> aliased) {
        this(alias, aliased, null);
    }

    private InnodbTablespaces(Name alias, Table<InnodbTablespacesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbTablespaces as(String alias) {
        return new InnodbTablespaces(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbTablespaces as(Name alias) {
        return new InnodbTablespaces(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbTablespaces rename(String name) {
        return new InnodbTablespaces(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbTablespaces rename(Name name) {
        return new InnodbTablespaces(name, null);
    }
}
