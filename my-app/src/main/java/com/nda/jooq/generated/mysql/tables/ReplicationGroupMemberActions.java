/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.mysql.tables;


import com.nda.jooq.generated.mysql.Indexes;
import com.nda.jooq.generated.mysql.Keys;
import com.nda.jooq.generated.mysql.Mysql;
import com.nda.jooq.generated.mysql.tables.records.ReplicationGroupMemberActionsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;


/**
 * The member actions configuration.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationGroupMemberActions extends TableImpl<ReplicationGroupMemberActionsRecord> {

    private static final long serialVersionUID = 620221800;

    /**
     * The reference instance of <code>mysql.replication_group_member_actions</code>
     */
    public static final ReplicationGroupMemberActions REPLICATION_GROUP_MEMBER_ACTIONS = new ReplicationGroupMemberActions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReplicationGroupMemberActionsRecord> getRecordType() {
        return ReplicationGroupMemberActionsRecord.class;
    }

    /**
     * The column <code>mysql.replication_group_member_actions.name</code>. The action name.
     */
    public final TableField<ReplicationGroupMemberActionsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CHAR(255).nullable(false), this, "The action name.");

    /**
     * The column <code>mysql.replication_group_member_actions.event</code>. The event that will trigger the action.
     */
    public final TableField<ReplicationGroupMemberActionsRecord, String> EVENT = createField("event", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "The event that will trigger the action.");

    /**
     * The column <code>mysql.replication_group_member_actions.enabled</code>. Whether the action is enabled.
     */
    public final TableField<ReplicationGroupMemberActionsRecord, Byte> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "Whether the action is enabled.");

    /**
     * The column <code>mysql.replication_group_member_actions.type</code>. The action type.
     */
    public final TableField<ReplicationGroupMemberActionsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "The action type.");

    /**
     * The column <code>mysql.replication_group_member_actions.priority</code>. The order on which the action will be run, value between 1 and 100, lower values first.
     */
    public final TableField<ReplicationGroupMemberActionsRecord, UByte> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "The order on which the action will be run, value between 1 and 100, lower values first.");

    /**
     * The column <code>mysql.replication_group_member_actions.error_handling</code>. On errors during the action will be handled: IGNORE, CRITICAL.
     */
    public final TableField<ReplicationGroupMemberActionsRecord, String> ERROR_HANDLING = createField("error_handling", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "On errors during the action will be handled: IGNORE, CRITICAL.");

    /**
     * Create a <code>mysql.replication_group_member_actions</code> table reference
     */
    public ReplicationGroupMemberActions() {
        this(DSL.name("replication_group_member_actions"), null);
    }

    /**
     * Create an aliased <code>mysql.replication_group_member_actions</code> table reference
     */
    public ReplicationGroupMemberActions(String alias) {
        this(DSL.name(alias), REPLICATION_GROUP_MEMBER_ACTIONS);
    }

    /**
     * Create an aliased <code>mysql.replication_group_member_actions</code> table reference
     */
    public ReplicationGroupMemberActions(Name alias) {
        this(alias, REPLICATION_GROUP_MEMBER_ACTIONS);
    }

    private ReplicationGroupMemberActions(Name alias, Table<ReplicationGroupMemberActionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReplicationGroupMemberActions(Name alias, Table<ReplicationGroupMemberActionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "The member actions configuration.");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REPLICATION_GROUP_MEMBER_ACTIONS_EVENT, Indexes.REPLICATION_GROUP_MEMBER_ACTIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReplicationGroupMemberActionsRecord> getPrimaryKey() {
        return Keys.KEY_REPLICATION_GROUP_MEMBER_ACTIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReplicationGroupMemberActionsRecord>> getKeys() {
        return Arrays.<UniqueKey<ReplicationGroupMemberActionsRecord>>asList(Keys.KEY_REPLICATION_GROUP_MEMBER_ACTIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupMemberActions as(String alias) {
        return new ReplicationGroupMemberActions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationGroupMemberActions as(Name alias) {
        return new ReplicationGroupMemberActions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationGroupMemberActions rename(String name) {
        return new ReplicationGroupMemberActions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationGroupMemberActions rename(Name name) {
        return new ReplicationGroupMemberActions(name, null);
    }
}
