/*
 * This file is generated by jOOQ.
*/
package com.nda.jooq.generated.performance_schema.tables;


import com.nda.jooq.generated.performance_schema.PerformanceSchema;
import com.nda.jooq.generated.performance_schema.enums.ReplicationApplierFiltersConfiguredBy;
import com.nda.jooq.generated.performance_schema.tables.records.ReplicationApplierFiltersRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationApplierFilters extends TableImpl<ReplicationApplierFiltersRecord> {

    private static final long serialVersionUID = 1075826025;

    /**
     * The reference instance of <code>performance_schema.replication_applier_filters</code>
     */
    public static final ReplicationApplierFilters REPLICATION_APPLIER_FILTERS = new ReplicationApplierFilters();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReplicationApplierFiltersRecord> getRecordType() {
        return ReplicationApplierFiltersRecord.class;
    }

    /**
     * The column <code>performance_schema.replication_applier_filters.CHANNEL_NAME</code>.
     */
    public final TableField<ReplicationApplierFiltersRecord, String> CHANNEL_NAME = createField("CHANNEL_NAME", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_filters.FILTER_NAME</code>.
     */
    public final TableField<ReplicationApplierFiltersRecord, String> FILTER_NAME = createField("FILTER_NAME", org.jooq.impl.SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_filters.FILTER_RULE</code>.
     */
    public final TableField<ReplicationApplierFiltersRecord, String> FILTER_RULE = createField("FILTER_RULE", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_filters.CONFIGURED_BY</code>.
     */
    public final TableField<ReplicationApplierFiltersRecord, ReplicationApplierFiltersConfiguredBy> CONFIGURED_BY = createField("CONFIGURED_BY", org.jooq.impl.SQLDataType.VARCHAR(37).nullable(false).asEnumDataType(com.nda.jooq.generated.performance_schema.enums.ReplicationApplierFiltersConfiguredBy.class), this, "");

    /**
     * The column <code>performance_schema.replication_applier_filters.ACTIVE_SINCE</code>.
     */
    public final TableField<ReplicationApplierFiltersRecord, Timestamp> ACTIVE_SINCE = createField("ACTIVE_SINCE", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>performance_schema.replication_applier_filters.COUNTER</code>.
     */
    public final TableField<ReplicationApplierFiltersRecord, ULong> COUNTER = createField("COUNTER", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>performance_schema.replication_applier_filters</code> table reference
     */
    public ReplicationApplierFilters() {
        this(DSL.name("replication_applier_filters"), null);
    }

    /**
     * Create an aliased <code>performance_schema.replication_applier_filters</code> table reference
     */
    public ReplicationApplierFilters(String alias) {
        this(DSL.name(alias), REPLICATION_APPLIER_FILTERS);
    }

    /**
     * Create an aliased <code>performance_schema.replication_applier_filters</code> table reference
     */
    public ReplicationApplierFilters(Name alias) {
        this(alias, REPLICATION_APPLIER_FILTERS);
    }

    private ReplicationApplierFilters(Name alias, Table<ReplicationApplierFiltersRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReplicationApplierFilters(Name alias, Table<ReplicationApplierFiltersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierFilters as(String alias) {
        return new ReplicationApplierFilters(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReplicationApplierFilters as(Name alias) {
        return new ReplicationApplierFilters(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationApplierFilters rename(String name) {
        return new ReplicationApplierFilters(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReplicationApplierFilters rename(Name name) {
        return new ReplicationApplierFilters(name, null);
    }
}
